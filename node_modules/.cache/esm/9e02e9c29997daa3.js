"main";_999‍.x([["attemptSignIn",()=>attemptSignIn],["checkSignedIn",()=>checkSignedIn],["checkSignedOut",()=>checkSignedOut],["signOut",()=>signOut]]);let AuthenticationError;_999‍.w("apollo-server-express",[["AuthenticationError",["AuthenticationError"],function(v){AuthenticationError=v}]]);let User;_999‍.w("./models",[["User",["User"],function(v){User=v}]]);let SESS_NAME;_999‍.w("./config",[["SESS_NAME",["SESS_NAME"],function(v){SESS_NAME=v}]]);



       const attemptSignIn = async (email, password) => {
  const message = 'incorrect email or password. please try again.'
  const user = await User.findOne({ email })

  if (!user || !await user.matchesPassword(password)) {
    throw new AuthenticationError(message)
  }

  return user
}

const signedIn = req => req.session.userId

       const checkSignedIn = req => {
  if (!signedIn(req)) {
    throw new AuthenticationError('you must be signed in.')
  }
}

       const checkSignedOut = req => {
  if (signedIn(req)) {
    throw new AuthenticationError('you must be signed out.')
  }
}

       const signOut = (req, res) => new Promise((resolve, reject) => {
  req.session.destroy(err => {
    if (err) reject(err)

    res.clearCookie(SESS_NAME)
    resolve(true)
  })
}
)
