"main";let Joi;_2d7‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);let Message;_2d7‍.w("../models",[["Message",["Message"],function(v){Message=v}]]);let myMessage;_2d7‍.w("../schemas",[["myMessage",["myMessage"],function(v){myMessage=v}]]);let Auth;_2d7‍.w("../auth",[["*",null,function(v){Auth=v}]]);




_2d7‍.d({
  Mutation: {
    deleteMessage: async (root, { id }, { req }, info) => {
      // TODO: not auth, validation
      Auth.checkSignedIn(req)
      return Message.deleteOne({ id })
    },
    addMessage: async (root, args, { req }, info) => {
      // TODO: not auth, validation
      Auth.checkSignedIn(req)
      await Joi.validate(args, myMessage, { abortEarly: false })
      return Message.create(args)
    }
  }
});
