"main";let GraphQLScalarType;_26e‍.w("graphql",[["GraphQLScalarType",["GraphQLScalarType"],function(v){GraphQLScalarType=v}]]);let Kind;_26e‍.w("graphql/language",[["Kind",["Kind"],function(v){Kind=v}]]);let dayjs;_26e‍.w("dayjs",[["default",["dayjs"],function(v){dayjs=v}]]);



_26e‍.d({
  Date: new GraphQLScalarType({
    name: 'Date',
    description: 'Date custom scalar type',
    parseValue (value) {
      _26e‍.g.console.log(value)
      return dayjs(value)
    },
    serialize (value) {
      return dayjs(value).format('MM-DD-YYYY,hh:mm A')
    },
    parseLiteral (ast) {
      if (ast.kind === Kind.STRING) {
        return dayjs(ast.value)
      }
      return null
    }
  })
});
